getwd()
getwd()
getwd()
getwd()
getwd()
source("code/get_subject_ID_group_tp_forSwE.R")
final = txt_for_swe(group = "all", tp = "all")
# sample size
#nrow(subj_df)
subj_idx <- match(unique(final$subj.ID), final$subj.ID) # indices of first row of each subject
subj_df <- final[subj_idx,] # df with unique subjects
# completed time points
freqtable <- as.data.frame(table(final$subj.ID))
tpfreq <- table(freqtable$Freq)
# overview distribution of data points
tp1 <- as.character(freqtable$Var1[freqtable$Freq == 1])
tp2 <- as.character(freqtable$Var1[freqtable$Freq == 2])
tp3 <- as.character(freqtable$Var1[freqtable$Freq == 3])
tp1_tab <- table(subset(final, subj.ID %in% tp1)$tp, subset(final, subj.ID %in% tp1)$condition)
tp2_tab <- table(subset(final, subj.ID %in% tp2)$tp, subset(final, subj.ID %in% tp2)$condition)[c(1,3),]
tp3_tab <- table(subset(final, subj.ID %in% tp3)$tp, subset(final, subj.ID %in% tp3)$condition)[1,]
total_datapoints <- c(sum(final$group==1),sum(final$group==2))
total_subjects <- plyr::count(final[subj_idx,"group"])$freq
tab_sample <- data.frame(rbind(tp1_tab, tp2_tab, tp3_tab, total_subjects, total_datapoints))
rm(tp1,tp2,tp3,tp1_tab, tp2_tab, tp3_tab, total_subjects, total_datapoints)
rownames(tab_sample) <- c("count: only 0","count: only 6","count: only 12","count: 0 and 6","count: 6 and 12","count: complete data","total number of subjects","total data points")
colnames(tab_sample) <- c("BARS","NBARS")
# distribution of condition and sex
subj_df$Sex <- plyr::mapvalues(subj_df$Sex, from = c("-1", "1"), to = c("f", "m"))
cs <- addmargins(table(subj_df$Sex,subj_df$condition))
dfw <- tidyr::pivot_wider(data = final,
id_cols = c("subj.ID","condition","Sex","Age_BL"),
names_from = "tp",
values_from = c("BMI","logmFD"))
getwd()
source("./code/get_subject_ID_group_tp_forSwE.R")
# load packages
library(car) # version 3.0.9
library(plyr) # version 1.8.6
library(dplyr) # version 1.0.2
library(tidyr) # version 1.1.2
library(kableExtra) # version 1.2.1
library(ggplot2) # version 3.3.2
library(patchwork) # version 1.0.1; API for sequentially building up a plot (similar to gridExtra and cowplot)
#library(cowplot)
library(RColorBrewer) # version 1.1.2
library(psych) # version 2.0.8
#library(lsr)
#library(wesanderson) # colour palette
#library(haven)
library(knitr) # version 1.30
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE) # fig.height=2, fig.width=4)
options(knitr.table.format = "latex")
# put the path to this file here (working directory for Rmarkdown):
opts_knit$set(root.dir = getwd())
getwd()
source("./code/get_subject_ID_group_tp_forSwE.R")
final = txt_for_swe(group = "all", tp = "all")
# sample size
#nrow(subj_df)
subj_idx <- match(unique(final$subj.ID), final$subj.ID) # indices of first row of each subject
subj_df <- final[subj_idx,] # df with unique subjects
# completed time points
freqtable <- as.data.frame(table(final$subj.ID))
tpfreq <- table(freqtable$Freq)
# overview distribution of data points
tp1 <- as.character(freqtable$Var1[freqtable$Freq == 1])
tp2 <- as.character(freqtable$Var1[freqtable$Freq == 2])
tp3 <- as.character(freqtable$Var1[freqtable$Freq == 3])
tp1_tab <- table(subset(final, subj.ID %in% tp1)$tp, subset(final, subj.ID %in% tp1)$condition)
tp2_tab <- table(subset(final, subj.ID %in% tp2)$tp, subset(final, subj.ID %in% tp2)$condition)[c(1,3),]
tp3_tab <- table(subset(final, subj.ID %in% tp3)$tp, subset(final, subj.ID %in% tp3)$condition)[1,]
total_datapoints <- c(sum(final$group==1),sum(final$group==2))
total_subjects <- plyr::count(final[subj_idx,"group"])$freq
tab_sample <- data.frame(rbind(tp1_tab, tp2_tab, tp3_tab, total_subjects, total_datapoints))
rm(tp1,tp2,tp3,tp1_tab, tp2_tab, tp3_tab, total_subjects, total_datapoints)
rownames(tab_sample) <- c("count: only 0","count: only 6","count: only 12","count: 0 and 6","count: 6 and 12","count: complete data","total number of subjects","total data points")
colnames(tab_sample) <- c("BARS","NBARS")
# distribution of condition and sex
subj_df$Sex <- plyr::mapvalues(subj_df$Sex, from = c("-1", "1"), to = c("f", "m"))
cs <- addmargins(table(subj_df$Sex,subj_df$condition))
dfw <- tidyr::pivot_wider(data = final,
id_cols = c("subj.ID","condition","Sex","Age_BL"),
names_from = "tp",
values_from = c("BMI","logmFD"))
# save original working directory
original_wd <- getwd()
original_wd
abs_path <- read.csv("abs_path.csv", header=FALSE, stringsAsFactors=FALSE)
